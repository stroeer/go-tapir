// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: stroeer/core/v1/core_article_service.proto

//*
// @FileArticle ⚙︎ CoreArticleService

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// ## `Type`
//
// | Enum value         | Description                                                 |
// |--------------------|-------------------------------------------------------------|
// | `TYPE_UNSPECIFIED` | unspecified                                                 |
// | `HOME_SECTION`     | query by exact _home section_ which is configured in the CMS|
// | `ROOT_SECTION`     | query by exact _root section_ which is derived from _home section_ when only retaining the first level of the `path` |
//
// see the description [above](#query) why these query types exist, also see
// [`Reference`](article.html#section_tree) how section information are stored.
//
// @CodeBlockStart protobuf
type ListArticlesRequest_Query_Type int32

const (
	ListArticlesRequest_Query_TYPE_UNSPECIFIED ListArticlesRequest_Query_Type = 0
	ListArticlesRequest_Query_HOME_SECTION     ListArticlesRequest_Query_Type = 1
	ListArticlesRequest_Query_ROOT_SECTION     ListArticlesRequest_Query_Type = 2
)

// Enum value maps for ListArticlesRequest_Query_Type.
var (
	ListArticlesRequest_Query_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "HOME_SECTION",
		2: "ROOT_SECTION",
	}
	ListArticlesRequest_Query_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"HOME_SECTION":     1,
		"ROOT_SECTION":     2,
	}
)

func (x ListArticlesRequest_Query_Type) Enum() *ListArticlesRequest_Query_Type {
	p := new(ListArticlesRequest_Query_Type)
	*p = x
	return p
}

func (x ListArticlesRequest_Query_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListArticlesRequest_Query_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_stroeer_core_v1_core_article_service_proto_enumTypes[0].Descriptor()
}

func (ListArticlesRequest_Query_Type) Type() protoreflect.EnumType {
	return &file_stroeer_core_v1_core_article_service_proto_enumTypes[0]
}

func (x ListArticlesRequest_Query_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListArticlesRequest_Query_Type.Descriptor instead.
func (ListArticlesRequest_Query_Type) EnumDescriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{3, 0, 0}
}

// *
// ## `SortBy`
//
// | Enum value            | Description                                                |
// |-----------------------|------------------------------------------------------------|
// | `SORT_BY_UNSPECIFIED` | unspecified                                                |
// | `UPDATE_TIME`         | sort by the content's [`update_time`][8]                   |
// | `PUBLISH_TIME`        | sort by the content's [`publish_time`][9]                  |
//
// [8]: metadata.html#update_time
// [9]: metadata.html#publish_time
//
// @CodeBlockStart protobuf
type ListArticlesRequest_Query_SortBy int32

const (
	ListArticlesRequest_Query_SORT_BY_UNSPECIFIED ListArticlesRequest_Query_SortBy = 0
	ListArticlesRequest_Query_UPDATE_TIME         ListArticlesRequest_Query_SortBy = 1
	ListArticlesRequest_Query_PUBLISH_TIME        ListArticlesRequest_Query_SortBy = 2
)

// Enum value maps for ListArticlesRequest_Query_SortBy.
var (
	ListArticlesRequest_Query_SortBy_name = map[int32]string{
		0: "SORT_BY_UNSPECIFIED",
		1: "UPDATE_TIME",
		2: "PUBLISH_TIME",
	}
	ListArticlesRequest_Query_SortBy_value = map[string]int32{
		"SORT_BY_UNSPECIFIED": 0,
		"UPDATE_TIME":         1,
		"PUBLISH_TIME":        2,
	}
)

func (x ListArticlesRequest_Query_SortBy) Enum() *ListArticlesRequest_Query_SortBy {
	p := new(ListArticlesRequest_Query_SortBy)
	*p = x
	return p
}

func (x ListArticlesRequest_Query_SortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListArticlesRequest_Query_SortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_stroeer_core_v1_core_article_service_proto_enumTypes[1].Descriptor()
}

func (ListArticlesRequest_Query_SortBy) Type() protoreflect.EnumType {
	return &file_stroeer_core_v1_core_article_service_proto_enumTypes[1]
}

func (x ListArticlesRequest_Query_SortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListArticlesRequest_Query_SortBy.Descriptor instead.
func (ListArticlesRequest_Query_SortBy) EnumDescriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{3, 0, 1}
}

// *
// ## `Order`
//
// order of index traversal, default: ascending.
//
// | Enum value          | Description                      |
// |---------------------|----------------------------------|
// | `ORDER_UNSPECIFIED` | unspecified                      |
// | `ASCENDING`         | ascending order index traversal  |
// | `DESCENDING`        | descending order index traversal |
//
// @CodeBlockStart protobuf
type ListArticlesRequest_Query_Order int32

const (
	ListArticlesRequest_Query_ORDER_UNSPECIFIED ListArticlesRequest_Query_Order = 0
	ListArticlesRequest_Query_ASCENDING         ListArticlesRequest_Query_Order = 1
	ListArticlesRequest_Query_DESCENDING        ListArticlesRequest_Query_Order = 2
)

// Enum value maps for ListArticlesRequest_Query_Order.
var (
	ListArticlesRequest_Query_Order_name = map[int32]string{
		0: "ORDER_UNSPECIFIED",
		1: "ASCENDING",
		2: "DESCENDING",
	}
	ListArticlesRequest_Query_Order_value = map[string]int32{
		"ORDER_UNSPECIFIED": 0,
		"ASCENDING":         1,
		"DESCENDING":        2,
	}
)

func (x ListArticlesRequest_Query_Order) Enum() *ListArticlesRequest_Query_Order {
	p := new(ListArticlesRequest_Query_Order)
	*p = x
	return p
}

func (x ListArticlesRequest_Query_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListArticlesRequest_Query_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_stroeer_core_v1_core_article_service_proto_enumTypes[2].Descriptor()
}

func (ListArticlesRequest_Query_Order) Type() protoreflect.EnumType {
	return &file_stroeer_core_v1_core_article_service_proto_enumTypes[2]
}

func (x ListArticlesRequest_Query_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListArticlesRequest_Query_Order.Descriptor instead.
func (ListArticlesRequest_Query_Order) EnumDescriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{3, 0, 2}
}

// *
// # `⚙︎ GetArticle`
// ```protobuf
// rpc GetArticle (GetArticleRequest) returns (stroeer.core.v1.Article) {}
// ```
//
// returns a single [`stroeer.core.v1.Article`](Article.html) if the given `id` exists,
// an `Error`, otherwise. (todo: describe errors)
//
// | Field name       | Type                | Description                                                 |
// |------------------|---------------------|-------------------------------------------------------------|
// | `id`             | `int64`             | [required] Unique id of the article to be fetched.          |
//
// @CodeBlockStart protobuf
type GetArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetArticleRequest) Reset() {
	*x = GetArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleRequest) ProtoMessage() {}

func (x *GetArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleRequest.ProtoReflect.Descriptor instead.
func (*GetArticleRequest) Descriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetArticleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// *
// # `⚙︎ BatchGetArticle`
//
// returns multiple [`stroeer.core.v1.Article`](Article.html) for the given `ids`. The
// ordering of items will the same ordering as the `ids` requested.
// If an `id` does not exists, it is omitted in the result (no error will be raised).
//
// There is a maximum of 100 items that can be queried in one batch.
//
// | Field name       | Type                | Description                                                 |
// |------------------|---------------------|-------------------------------------------------------------|
// | `ids`            | `repeated int64`    | [required] A list of ids of the articles to be fetched      |
//
// @CodeBlockStart protobuf
type BatchGetArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchGetArticlesRequest) Reset() {
	*x = BatchGetArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetArticlesRequest) ProtoMessage() {}

func (x *BatchGetArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetArticlesRequest.ProtoReflect.Descriptor instead.
func (*BatchGetArticlesRequest) Descriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{1}
}

func (x *BatchGetArticlesRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BatchGetArticlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*Article `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *BatchGetArticlesResponse) Reset() {
	*x = BatchGetArticlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetArticlesResponse) ProtoMessage() {}

func (x *BatchGetArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetArticlesResponse.ProtoReflect.Descriptor instead.
func (*BatchGetArticlesResponse) Descriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{2}
}

func (x *BatchGetArticlesResponse) GetArticles() []*Article {
	if x != nil {
		return x.Articles
	}
	return nil
}

// *
// returns a [`message-listarticlesresponse`](#ListArticlesResponse) with
// articles matching the query. If the results exceed 100 Articles or 1 MB
// the response can be paginated to obtain additional results.
//
// ## `ListArticlesRequest`
//
// | Field name       | Type                | Description                                                 |
// |------------------|---------------------|-------------------------------------------------------------|
// | `query`          | [`Query`][1]        | [required] find items based on query values                 |
// | `filters`        | [`Filters`][2]      | [optional] A filter expression is applied after a Query finishes, but before the results are returned. |
// | `page_size`      | `int32`             | [optional] limit the results per page, default is `10`; max is `100` (or result exceeds `1 MB`). Values above 100 will be coerced to 100. If results get truncated, you can use pagination. |
// | `page_token`     | `string`            | [optional]  A page token, received from a previous `ListArticles` call. Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to `ListArticles` must match the call that provided the page token.|
//
// [1]: #query
// [2]: #filters
//
// @CodeBlockStart protobuf
type ListArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query     *ListArticlesRequest_Query   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Filters   *ListArticlesRequest_Filters `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	PageSize  int32                        `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                       `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListArticlesRequest) Reset() {
	*x = ListArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArticlesRequest) ProtoMessage() {}

func (x *ListArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArticlesRequest.ProtoReflect.Descriptor instead.
func (*ListArticlesRequest) Descriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListArticlesRequest) GetQuery() *ListArticlesRequest_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListArticlesRequest) GetFilters() *ListArticlesRequest_Filters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListArticlesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListArticlesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// *
// ## `ListArticlesResponse`
//
// | Field name       | Type                | Description                                                 |
// |------------------|---------------------|-------------------------------------------------------------|
// | `articles`       | [`Article`][article]| list of articles that match the `query` and also the `filter`, otherwise `empty`. |
// | `next_page_token`| `string`            | A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. |
//
// [article]: article.html
//
// @CodeBlockStart protobuf
type ListArticlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles      []*Article `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListArticlesResponse) Reset() {
	*x = ListArticlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArticlesResponse) ProtoMessage() {}

func (x *ListArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArticlesResponse.ProtoReflect.Descriptor instead.
func (*ListArticlesResponse) Descriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListArticlesResponse) GetArticles() []*Article {
	if x != nil {
		return x.Articles
	}
	return nil
}

func (x *ListArticlesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// *
// # `⚙︎ ListSections`
//
// list the available root sections
//
// ## `ListSectionsResponse`
//
// list all available `root_sections` that can be used in the [`query`](#query) above.
//
// @CodeBlockStart protobuf
type ListSectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sections []string `protobuf:"bytes,1,rep,name=sections,proto3" json:"sections,omitempty"`
}

func (x *ListSectionsResponse) Reset() {
	*x = ListSectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSectionsResponse) ProtoMessage() {}

func (x *ListSectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSectionsResponse.ProtoReflect.Descriptor instead.
func (*ListSectionsResponse) Descriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListSectionsResponse) GetSections() []string {
	if x != nil {
		return x.Sections
	}
	return nil
}

// *
// ## `Query`
//
// Specify the search criteria. The list-API is build around sections which
// come in two flavors:
//
// 1. `home_section`: find all articles that resides within that exact section.
// The `home_section` is equal to the settings found in the CMS, e.g. `/nachrichten/wissen/`
// 2. `root_section`: this property is derived from the `home_section` path
// by retaining only the _root_ folder, e.g. for `/nachrichten/wissen/` the `root_section`
// becomes `/nachrichten/`
//
// In most cases using the `root_section` should yield better results since
// it will also find content in nested sections whereas `home_section` would
// only return content which was curated into the exact section that was queried.
//
// | Field name       | Type                | Description                                                 |
// |------------------|---------------------|-------------------------------------------------------------|
// | `path`           | `string`            | [required] `path`, with leading and trailing slash (e.g. `/nachrichten/`) |
// | `type`           | [`Type`][3]         | [required] query type, either `Type.HOME_SECTION` or `Type.ROOT_SECTION` |
// | `sort_by`        | [`SortBy`][4]       | [required] sorting of the result set, either `SortBy.UPDATE_TIME` or `SortBy.PUBLISH_TIME`  |
// | `order`          | [`Order`][5]        | [optional] sorting direction for the results regarding the `sort_by` field, default is `Order.ASCENDING` |
// | `from_time`      | [`Timestamp`][ts]   | [optional] time constraint that refers to the `sort_by` field. |
// | `to_time`        | [`Timestamp`][ts]   | [optional] time constraint that refers to the `sort_by` field. |
//
// [3]: #type
// [4]: #sortby
// [5]: #order
// [ts]: https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Timestamp
//
// @CodeBlockStart protobuf
type ListArticlesRequest_Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string                           `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type     ListArticlesRequest_Query_Type   `protobuf:"varint,2,opt,name=type,proto3,enum=stroeer.core.v1.ListArticlesRequest_Query_Type" json:"type,omitempty"`
	SortBy   ListArticlesRequest_Query_SortBy `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=stroeer.core.v1.ListArticlesRequest_Query_SortBy" json:"sort_by,omitempty"`
	Order    ListArticlesRequest_Query_Order  `protobuf:"varint,4,opt,name=order,proto3,enum=stroeer.core.v1.ListArticlesRequest_Query_Order" json:"order,omitempty"`
	FromTime *timestamppb.Timestamp           `protobuf:"bytes,5,opt,name=from_time,json=fromTime,proto3" json:"from_time,omitempty"`
	ToTime   *timestamppb.Timestamp           `protobuf:"bytes,6,opt,name=to_time,json=toTime,proto3" json:"to_time,omitempty"`
}

func (x *ListArticlesRequest_Query) Reset() {
	*x = ListArticlesRequest_Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArticlesRequest_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArticlesRequest_Query) ProtoMessage() {}

func (x *ListArticlesRequest_Query) ProtoReflect() protoreflect.Message {
	mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArticlesRequest_Query.ProtoReflect.Descriptor instead.
func (*ListArticlesRequest_Query) Descriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListArticlesRequest_Query) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListArticlesRequest_Query) GetType() ListArticlesRequest_Query_Type {
	if x != nil {
		return x.Type
	}
	return ListArticlesRequest_Query_TYPE_UNSPECIFIED
}

func (x *ListArticlesRequest_Query) GetSortBy() ListArticlesRequest_Query_SortBy {
	if x != nil {
		return x.SortBy
	}
	return ListArticlesRequest_Query_SORT_BY_UNSPECIFIED
}

func (x *ListArticlesRequest_Query) GetOrder() ListArticlesRequest_Query_Order {
	if x != nil {
		return x.Order
	}
	return ListArticlesRequest_Query_ORDER_UNSPECIFIED
}

func (x *ListArticlesRequest_Query) GetFromTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FromTime
	}
	return nil
}

func (x *ListArticlesRequest_Query) GetToTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ToTime
	}
	return nil
}

// *
// ## `Filters`
//
// If you need to further refine the Query results, you can optionally provide
// a filter expression. A filter expression determines which items within the
// Query results should be returned to you. All of the other results are discarded.
//
//	A filter expression is applied after a Query finishes, but before the results
//	are returned. Therefore, a Query consumes the same amount of read capacity,
//	regardless of whether a filter expression is present.
//
// | Field name           | Type                            | Description                                 |
// |----------------------|---------------------------------|---------------------------------------------|
// | `type_includes`      | [`ContentType`][6]     | `type` to include into the result set       |
// | `type_includes`      | [`ContentType`][6]     | `type` to exclude from the result set       |
// | `sub_type_includes`  | [`ContentSubType`][7]  | `sub_type` to include into the result set   |
// | `sub_type_excludes`  | [`ContentSubType`][7]  | `sub_type` to exclude from the result set   |
//
// [6]: article.html#type
// [7]: article.html#sub_type
//
// @CodeBlockStart protobuf
type ListArticlesRequest_Filters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeIncludes    []Article_Type    `protobuf:"varint,1,rep,packed,name=type_includes,json=typeIncludes,proto3,enum=stroeer.core.v1.Article_Type" json:"type_includes,omitempty"`
	TypeExcludes    []Article_Type    `protobuf:"varint,2,rep,packed,name=type_excludes,json=typeExcludes,proto3,enum=stroeer.core.v1.Article_Type" json:"type_excludes,omitempty"`
	SubTypeIncludes []Article_SubType `protobuf:"varint,3,rep,packed,name=sub_type_includes,json=subTypeIncludes,proto3,enum=stroeer.core.v1.Article_SubType" json:"sub_type_includes,omitempty"`
	SubTypeExcludes []Article_SubType `protobuf:"varint,4,rep,packed,name=sub_type_excludes,json=subTypeExcludes,proto3,enum=stroeer.core.v1.Article_SubType" json:"sub_type_excludes,omitempty"`
}

func (x *ListArticlesRequest_Filters) Reset() {
	*x = ListArticlesRequest_Filters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArticlesRequest_Filters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArticlesRequest_Filters) ProtoMessage() {}

func (x *ListArticlesRequest_Filters) ProtoReflect() protoreflect.Message {
	mi := &file_stroeer_core_v1_core_article_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArticlesRequest_Filters.ProtoReflect.Descriptor instead.
func (*ListArticlesRequest_Filters) Descriptor() ([]byte, []int) {
	return file_stroeer_core_v1_core_article_service_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ListArticlesRequest_Filters) GetTypeIncludes() []Article_Type {
	if x != nil {
		return x.TypeIncludes
	}
	return nil
}

func (x *ListArticlesRequest_Filters) GetTypeExcludes() []Article_Type {
	if x != nil {
		return x.TypeExcludes
	}
	return nil
}

func (x *ListArticlesRequest_Filters) GetSubTypeIncludes() []Article_SubType {
	if x != nil {
		return x.SubTypeIncludes
	}
	return nil
}

func (x *ListArticlesRequest_Filters) GetSubTypeExcludes() []Article_SubType {
	if x != nil {
		return x.SubTypeExcludes
	}
	return nil
}

var File_stroeer_core_v1_core_article_service_proto protoreflect.FileDescriptor

var file_stroeer_core_v1_core_article_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x74,
	0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1d, 0x73,
	0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x2b, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x50, 0x0a, 0x18,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x72,
	0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0xb7,
	0x08, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x6f,
	0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0xa9, 0x04, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x43, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x4a, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x46, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x72,
	0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x74, 0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x40, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x02, 0x22, 0x44, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x17, 0x0a,
	0x13, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x55, 0x42, 0x4c, 0x49,
	0x53, 0x48, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x02, 0x22, 0x3d, 0x0a, 0x05, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x53, 0x43,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x53, 0x43,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x1a, 0xad, 0x02, 0x0a, 0x07, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x74,
	0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x74, 0x79, 0x70, 0x65, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x11,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x11, 0x73, 0x75,
	0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x08, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x32,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x32, 0xf9, 0x02, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65,
	0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x24,
	0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x40,
	0x0a, 0x12, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x2d, 0x74, 0x61,
	0x70, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x72, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stroeer_core_v1_core_article_service_proto_rawDescOnce sync.Once
	file_stroeer_core_v1_core_article_service_proto_rawDescData = file_stroeer_core_v1_core_article_service_proto_rawDesc
)

func file_stroeer_core_v1_core_article_service_proto_rawDescGZIP() []byte {
	file_stroeer_core_v1_core_article_service_proto_rawDescOnce.Do(func() {
		file_stroeer_core_v1_core_article_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_stroeer_core_v1_core_article_service_proto_rawDescData)
	})
	return file_stroeer_core_v1_core_article_service_proto_rawDescData
}

var file_stroeer_core_v1_core_article_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_stroeer_core_v1_core_article_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_stroeer_core_v1_core_article_service_proto_goTypes = []interface{}{
	(ListArticlesRequest_Query_Type)(0),   // 0: stroeer.core.v1.ListArticlesRequest.Query.Type
	(ListArticlesRequest_Query_SortBy)(0), // 1: stroeer.core.v1.ListArticlesRequest.Query.SortBy
	(ListArticlesRequest_Query_Order)(0),  // 2: stroeer.core.v1.ListArticlesRequest.Query.Order
	(*GetArticleRequest)(nil),             // 3: stroeer.core.v1.GetArticleRequest
	(*BatchGetArticlesRequest)(nil),       // 4: stroeer.core.v1.BatchGetArticlesRequest
	(*BatchGetArticlesResponse)(nil),      // 5: stroeer.core.v1.BatchGetArticlesResponse
	(*ListArticlesRequest)(nil),           // 6: stroeer.core.v1.ListArticlesRequest
	(*ListArticlesResponse)(nil),          // 7: stroeer.core.v1.ListArticlesResponse
	(*ListSectionsResponse)(nil),          // 8: stroeer.core.v1.ListSectionsResponse
	(*ListArticlesRequest_Query)(nil),     // 9: stroeer.core.v1.ListArticlesRequest.Query
	(*ListArticlesRequest_Filters)(nil),   // 10: stroeer.core.v1.ListArticlesRequest.Filters
	(*Article)(nil),                       // 11: stroeer.core.v1.Article
	(*timestamppb.Timestamp)(nil),         // 12: google.protobuf.Timestamp
	(Article_Type)(0),                     // 13: stroeer.core.v1.Article.Type
	(Article_SubType)(0),                  // 14: stroeer.core.v1.Article.SubType
	(*emptypb.Empty)(nil),                 // 15: google.protobuf.Empty
}
var file_stroeer_core_v1_core_article_service_proto_depIdxs = []int32{
	11, // 0: stroeer.core.v1.BatchGetArticlesResponse.articles:type_name -> stroeer.core.v1.Article
	9,  // 1: stroeer.core.v1.ListArticlesRequest.query:type_name -> stroeer.core.v1.ListArticlesRequest.Query
	10, // 2: stroeer.core.v1.ListArticlesRequest.filters:type_name -> stroeer.core.v1.ListArticlesRequest.Filters
	11, // 3: stroeer.core.v1.ListArticlesResponse.articles:type_name -> stroeer.core.v1.Article
	0,  // 4: stroeer.core.v1.ListArticlesRequest.Query.type:type_name -> stroeer.core.v1.ListArticlesRequest.Query.Type
	1,  // 5: stroeer.core.v1.ListArticlesRequest.Query.sort_by:type_name -> stroeer.core.v1.ListArticlesRequest.Query.SortBy
	2,  // 6: stroeer.core.v1.ListArticlesRequest.Query.order:type_name -> stroeer.core.v1.ListArticlesRequest.Query.Order
	12, // 7: stroeer.core.v1.ListArticlesRequest.Query.from_time:type_name -> google.protobuf.Timestamp
	12, // 8: stroeer.core.v1.ListArticlesRequest.Query.to_time:type_name -> google.protobuf.Timestamp
	13, // 9: stroeer.core.v1.ListArticlesRequest.Filters.type_includes:type_name -> stroeer.core.v1.Article.Type
	13, // 10: stroeer.core.v1.ListArticlesRequest.Filters.type_excludes:type_name -> stroeer.core.v1.Article.Type
	14, // 11: stroeer.core.v1.ListArticlesRequest.Filters.sub_type_includes:type_name -> stroeer.core.v1.Article.SubType
	14, // 12: stroeer.core.v1.ListArticlesRequest.Filters.sub_type_excludes:type_name -> stroeer.core.v1.Article.SubType
	3,  // 13: stroeer.core.v1.ArticleService.GetArticle:input_type -> stroeer.core.v1.GetArticleRequest
	4,  // 14: stroeer.core.v1.ArticleService.BatchGetArticles:input_type -> stroeer.core.v1.BatchGetArticlesRequest
	6,  // 15: stroeer.core.v1.ArticleService.ListArticles:input_type -> stroeer.core.v1.ListArticlesRequest
	15, // 16: stroeer.core.v1.ArticleService.ListSections:input_type -> google.protobuf.Empty
	11, // 17: stroeer.core.v1.ArticleService.GetArticle:output_type -> stroeer.core.v1.Article
	5,  // 18: stroeer.core.v1.ArticleService.BatchGetArticles:output_type -> stroeer.core.v1.BatchGetArticlesResponse
	7,  // 19: stroeer.core.v1.ArticleService.ListArticles:output_type -> stroeer.core.v1.ListArticlesResponse
	8,  // 20: stroeer.core.v1.ArticleService.ListSections:output_type -> stroeer.core.v1.ListSectionsResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_stroeer_core_v1_core_article_service_proto_init() }
func file_stroeer_core_v1_core_article_service_proto_init() {
	if File_stroeer_core_v1_core_article_service_proto != nil {
		return
	}
	file_stroeer_core_v1_article_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stroeer_core_v1_core_article_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stroeer_core_v1_core_article_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stroeer_core_v1_core_article_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetArticlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stroeer_core_v1_core_article_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stroeer_core_v1_core_article_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArticlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stroeer_core_v1_core_article_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stroeer_core_v1_core_article_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArticlesRequest_Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stroeer_core_v1_core_article_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArticlesRequest_Filters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stroeer_core_v1_core_article_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stroeer_core_v1_core_article_service_proto_goTypes,
		DependencyIndexes: file_stroeer_core_v1_core_article_service_proto_depIdxs,
		EnumInfos:         file_stroeer_core_v1_core_article_service_proto_enumTypes,
		MessageInfos:      file_stroeer_core_v1_core_article_service_proto_msgTypes,
	}.Build()
	File_stroeer_core_v1_core_article_service_proto = out.File
	file_stroeer_core_v1_core_article_service_proto_rawDesc = nil
	file_stroeer_core_v1_core_article_service_proto_goTypes = nil
	file_stroeer_core_v1_core_article_service_proto_depIdxs = nil
}
